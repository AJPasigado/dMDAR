# Generated by Django 2.0.7 on 2019-02-17 16:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mobi.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=35)),
                ('lastname', models.CharField(max_length=35)),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(choices=[(mobi.models.GenreChoice('Action'), 'Action'), (mobi.models.GenreChoice('Adult'), 'Adult'), (mobi.models.GenreChoice('Adventure'), 'Adventure'), (mobi.models.GenreChoice('Animation'), 'Animation'), (mobi.models.GenreChoice('Biography'), 'Biography'), (mobi.models.GenreChoice('Comedy'), 'Comedy'), (mobi.models.GenreChoice('Crime'), 'Crime'), (mobi.models.GenreChoice('Documentary'), 'Documentary'), (mobi.models.GenreChoice('Drama'), 'Drama'), (mobi.models.GenreChoice('Family'), 'Family'), (mobi.models.GenreChoice('Fantasy'), 'Fantasy'), (mobi.models.GenreChoice('Film'), 'Film'), (mobi.models.GenreChoice('Noir'), 'Noir'), (mobi.models.GenreChoice('Game - Show'), 'Game - Show'), (mobi.models.GenreChoice('History'), 'History'), (mobi.models.GenreChoice('Horror'), 'Horror'), (mobi.models.GenreChoice('Musical'), 'Musical'), (mobi.models.GenreChoice('Music'), 'Music'), (mobi.models.GenreChoice('Mystery'), 'Mystery'), (mobi.models.GenreChoice('News'), 'News'), (mobi.models.GenreChoice('Reality - TV'), 'Reality - TV'), (mobi.models.GenreChoice('Romance'), 'Romance'), (mobi.models.GenreChoice('Sci - Fi'), 'Sci - Fi'), (mobi.models.GenreChoice('Short'), 'Short'), (mobi.models.GenreChoice('Sport'), 'Sport'), (mobi.models.GenreChoice('Talk - Show'), 'Talk - Show'), (mobi.models.GenreChoice('Thriller'), 'Thriller'), (mobi.models.GenreChoice('War'), 'War'), (mobi.models.GenreChoice('Western'), 'Western')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('isactive', models.BooleanField(default=True)),
                ('duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('synopsis', models.TextField()),
                ('restriction', models.CharField(choices=[('X', 'General Audience'), ('PG', 'Parental Guidance Suggested'), ('PG-13', 'Parents Strongly Cautioned'), ('R', 'Restricted '), ('X', 'X-Rated')], max_length=5)),
                ('release_date', models.DateField()),
                ('special', models.IntegerField(choices=[(1, 'Trending'), (2, 'Featured'), (0, 'Normal')])),
                ('trailer', models.URLField()),
                ('director', models.CharField(max_length=75)),
                ('background', models.ImageField(upload_to='')),
                ('poster', models.ImageField(upload_to='')),
                ('time_posted', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('time_posted', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobi.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=20)),
                ('usertype', models.BooleanField(choices=[(True, 'Admin'), (False, 'User')])),
                ('display_pic', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Watch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(choices=[(mobi.models.SiteChoice('Amazon'), 'Amazon'), (mobi.models.SiteChoice('Google Play'), 'Google Play'), (mobi.models.SiteChoice('iTunes'), 'iTunes'), (mobi.models.SiteChoice('Netflix'), 'Netflix')], max_length=15)),
                ('url', models.URLField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobi.Movie')),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobi.User'),
        ),
        migrations.AddField(
            model_name='movie',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobi.User'),
        ),
        migrations.AddField(
            model_name='genre',
            name='movies',
            field=models.ManyToManyField(to='mobi.Movie'),
        ),
        migrations.AddField(
            model_name='actor',
            name='movies',
            field=models.ManyToManyField(to='mobi.Movie'),
        ),
    ]
